name: Deployment to Vercel

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  ENVIRONMENT: ${{ (github.head_ref || github.ref_name) == 'main' && 'production' || 'preview' }}
  PSQL_HOST: ${{ secrets.PSQL_HOST }}
  PSQL_USER: ${{ secrets.PSQL_USER }}
  PSQL_PASS: ${{ secrets.PSQL_PASS }}
  PSQL_SSLMODE: verify-full

on: push

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Determine environment
        run: echo $ENVIRONMENT

      - uses: actions/checkout@v3

      - uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod
          cache-dependency-path: ./go.sum

      - name: Check formatting
        run: |
          output=$(gofmt -l .)
          test -z "$output" || { echo "$output"; exit 1; }

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=$ENVIRONMENT --token=${{ secrets.VERCEL_TOKEN }}

      - name: Bundle assets
        working-directory: ./web/assets
        run: |
          npm install
          npx vite build

      - name: Generate templ templates
        run: |
          go install github.com/a-h/templ/cmd/templ@latest
          templ generate

      - name: Database migrations
        run: |
          go install github.com/rubenv/sql-migrate/...@latest
          sql-migrate up

      - name: Generate models for sqlboiler
        run: |
          go install github.com/volatiletech/sqlboiler/v4@latest
          go install github.com/volatiletech/sqlboiler/v4/drivers/sqlboiler-psql@latest
          sqlboiler psql --wipe --add-global-variants

      - name: Deploy production
        if: env.ENVIRONMENT == 'production'
        run: vercel deploy --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy preview
        if: env.ENVIRONMENT != 'production'
        run: vercel deploy --token=${{ secrets.VERCEL_TOKEN }}
